"""empty message

Revision ID: e41fc5779294
Revises: c90f2fa956f9
Create Date: 2025-09-04 11:53:07.274015

"""

from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e41fc5779294"
down_revision: Union[str, Sequence[str], None] = "c90f2fa956f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_type",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "app_user",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "app_user",
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column("app_user", sa.Column("birthdate", sa.Date(), nullable=False))
    op.add_column(
        "app_user",
        sa.Column(
            "institutional_email", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    # Crea el tipo ENUM antes de agregar la columna
    userstatus_enum = sa.Enum("ACTIVE", "INACTIVE", "SUSPENDED", name="userstatus")
    userstatus_enum.create(op.get_bind(), checkfirst=True)
    op.add_column("app_user", sa.Column("status", userstatus_enum, nullable=False))
    op.add_column(
        "app_user",
        sa.Column("address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column("app_user", sa.Column("organization_id", sa.Uuid(), nullable=False))
    op.add_column(
        "app_user",
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column("app_user", sa.Column("user_type_id", sa.Uuid(), nullable=False))
    op.create_unique_constraint(
        None, "app_user", ["document_number", "organization_id"]
    )
    op.create_foreign_key(None, "app_user", "user_type", ["user_type_id"], ["id"])
    op.create_foreign_key(None, "app_user", "organization", ["organization_id"], ["id"])
    op.add_column("document_type", sa.Column("country_id", sa.Uuid(), nullable=False))
    op.drop_constraint(
        op.f("document_type_country_fkey"), "document_type", type_="foreignkey"
    )
    op.create_foreign_key(None, "document_type", "country", ["country_id"], ["id"])
    op.drop_column("document_type", "country")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "document_type",
        sa.Column("country", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "document_type", type_="foreignkey")
    op.create_foreign_key(
        op.f("document_type_country_fkey"),
        "document_type",
        "country",
        ["country"],
        ["id"],
    )
    op.drop_column("document_type", "country_id")
    op.drop_constraint(None, "app_user", type_="foreignkey")
    op.drop_constraint(None, "app_user", type_="foreignkey")
    op.drop_constraint(None, "app_user", type_="unique")
    op.drop_column("app_user", "user_type_id")
    op.drop_column("app_user", "password")
    op.drop_column("app_user", "organization_id")
    op.drop_column("app_user", "address")
    op.drop_column("app_user", "status")
    op.drop_column("app_user", "institutional_email")
    op.drop_column("app_user", "birthdate")
    op.drop_column("app_user", "phone")
    op.drop_column("app_user", "email")
    op.drop_table("user_type")
    op.drop_table("organization")
    # ### end Alembic commands ###
